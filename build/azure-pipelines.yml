trigger:
- main
- release

parameters:
- name: Platforms
  type: object
  default:
  - x86
  - x64
  - arm64
- name: Configurations
  type: object
  default:
  - Debug
  - Release

variables:
 # MSIXVersion's second part should always be odd to account for stub app's version
  MSIXVersion: '0.2101'
  solution: '**/WindowsAdvancedSettings.sln'
  appxPackageDir: 'AppxPackages'
  testOutputArtifactDir: 'TestResults'

resources:
  repositories:
  - repository: templates_onebranch
    type: git
    name: OneBranch.Pipelines/GovernedTemplates
    ref: refs/heads/main
  - repository: m365Pipelines
    type: git
    name: 1ESPipelineTemplates/M365GPT
    ref: refs/tags/release

extends:
  template: v1/M365.Official.PipelineTemplate.yml@m365Pipelines
  parameters:
    sdl:
      binskim:
        break: false
        scanOutputDirectoryOnly: true
      roslyn:
        enabled: true
      arrow:
        serviceConnection: DevHome Build VM Generation
      sourceRepositoriesToScan:
        include:
        - repository: git://Dart/DevHomeStub
      baseline:
        baselineFile: $(Build.SourcesDirectory)\guardian\SDL\.gdnbaselines
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: Build_StubPackages
      dependsOn: []
      jobs:
      - job: Build_StubPackages
        steps:
        - checkout: self
          path: s

        - checkout: git://Dart/DevHomeStub

        - task: NuGetToolInstaller@1

        - task: NuGetAuthenticate@1

        - task: PowerShell@2
          displayName: Build Stub Packages
          inputs:
            filePath: 'build/scripts/Build.ps1'
            arguments: -Configuration "Release" -Version $(MSIXVersion) -BuildStep "stubpackages" -IsAzurePipelineBuild

        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish MSIX Bundle Artifacts'
            artifactName: MsixBundle_Stub
            targetPath: DevHomeStub\WindowsAdvancedSettingsStubPackage\AppxPackages

    - stage: Build_WindowsAdvancedSettings
      dependsOn: []
      jobs:
      - ${{ each configuration in parameters.Configurations }}:
        - ${{ each platform in parameters.Platforms }}:
          - job: Build_${{ platform }}_${{ configuration }}
            workspace:
              clean: all
            timeoutInMinutes: 120
            steps:
            - task: NuGetToolInstaller@1

            - task: NuGetAuthenticate@1

            #  No stubbed files present.
            #- task: PowerShell@2
            #  displayName: Replace Stubbed Files
            #  inputs:
            #    filePath: 'build/scripts/Unstub.ps1'

            - task: MicrosoftTDBuild.tdbuild-task.tdbuild-task.TouchdownBuildTask@5
              displayName: Send and Download Localization Files for Artifacts
              condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
              inputs:
                teamId: 71220
                FederatedIdentityTDBuildServiceConnection: $(TouchdownServiceConnection)
                authType: FederatedIdentityTDBuild
                resourceFilePath: |
                  **\en-US\*.resw
                  **\en-US\PDP.xml
                outputDirectoryRoot: LocOutput
                localizationTarget: true
                appendRelativeDir: true
                pseudoSetting: Included

            - task: MicrosoftTDBuild.tdbuild-task.tdbuild-task.TouchdownBuildTask@5
              displayName: Download and Use Localization Files
              condition: eq(variables['EnableLocalization'], 'true')
              retryCountOnTaskFailure: 2
              inputs:
                teamId: 71220
                FederatedIdentityTDBuildServiceConnection: $(TouchdownServiceConnection)
                authType: FederatedIdentityTDBuild
                resourceFilePath: |
                  **\en-US\*.resw
                  **\en-US\PDP.xml
                localizationTarget: false
                appendRelativeDir: true
                pseudoSetting: Included

            - task: PowerShell@2
              displayName: Move Loc files one level up
              condition: eq(variables['EnableLocalization'], 'true')
              inputs:
                targetType: inline
                script: >-
                  $Files = Get-ChildItem . -R -Filter 'Resources.resw' | ? FullName -Like '*en-US\*\Resources.resw'

                  $Files | % { Move-Item -Verbose $_.Directory $_.Directory.Parent.Parent -EA:Ignore }

                  $Files = Get-ChildItem . -R -Filter 'PDP.xml' | ? FullName -Like '*en-US\*\PDP.xml'

                  $Files | % { Move-Item -Verbose $_.Directory $_.Directory.Parent.Parent -EA:Ignore }
                pwsh: true

            - task: PowerShell@2
              displayName: Archive Loc Output for Submission
              condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
              inputs:
                targetType: inline
                script: >-
                  New-Item -Path 'locArchive' -ItemType Directory

                  tar czf locArchive\LocOutput.tar.gz LocOutput
                pwsh: true

            - task: PowerShell@2
              displayName: Build Windows Advanced Settings
              retryCountOnTaskFailure: 2
              inputs:
                filePath: 'build/scripts/Build.ps1'
                arguments: -Platform "${{ platform }}" -Configuration "${{ configuration }}" -Version $(MSIXVersion) -BuildStep "msix" -AzureBuildingBranch "$(BuildingBranch)" -IsAzurePipelineBuild

            - task: PowerShell@2
              displayName: Move BinLog to output directory
              inputs:
                targetType: inline
                script: >-
                  Move-Item -Path $(Build.SourcesDirectory)\WindowsAdvancedSettings.${{ platform }}.${{ configuration }}.binlog -Destination $(Build.SourcesDirectory)\src\bin -Force
                pwsh: true

            # Symbols will be published once allowed.
            # - template: ./build/templates/publish-symbolrequestprod-api.yml@self
            #   parameters:
            #     includePublicSymbolServer: true
            #     symbolProject: 'WindowsAdvancedSettings'
            #     subscription: $(SymbolSubscription)
            #     indexSources: true
            #     symbolsArtifactName: 'WindowsAdvancedSettings_${{ platform }}_${{ configuration }}'
            #     symbolsVersion: '$(BuildingBranch)$(Build.BuildNumber)'
            #     symbolExpiryTime: 180
            #     searchPattern: >-
            #       $(Build.SourcesDirectory)\**\bin\**\*.pdb

            #       $(Build.SourcesDirectory)\**\bin\**\*.exe

            #       $(Build.SourcesDirectory)\**\bin\**\*.dll

            #       $(Build.SourcesDirectory)\**\obj\**\*.pdb

            #       $(Build.SourcesDirectory)\**\obj\**\windowsadvancedsettings.r2r.dll

            - template: ./build/templates/EsrpSigning-Steps.yml@self
              parameters:
                displayName: Submit *.msix to ESRP for code signing
                inputs:
                  FolderPath: '$(appxPackageDir)\${{ configuration }}'
                  Pattern: '*.msix'
                  UseMinimatch: true
                  signConfigType: inlineSignParams
                  inlineOperation: >-
                    [
                      {
                        "keycode": "CP-230012",
                        "operationSetCode": "SigntoolvNextSign",
                        "parameters": [
                          {
                            "parameterName": "OpusName",
                            "parameterValue": "Microsoft"
                          },
                          {
                            "parameterName": "OpusInfo",
                            "parameterValue": "http://www.microsoft.com"
                          },
                          {
                            "parameterName": "PageHash",
                            "parameterValue": "/NPH"
                          },
                          {
                            "parameterName": "FileDigest",
                            "parameterValue": "/fd sha256"
                          },
                          {
                            "parameterName": "TimeStamp",
                            "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                          }
                        ],
                        "toolName": "signtool.exe",
                        "toolVersion": "6.2.9304.0"
                      }
                    ]

            # Commented out until our implementation is fixed
            # - task: AzureKeyVault@1
            #   inputs:
            #     azureSubscription: 'DevHomeAzureServiceConnection'
            #     KeyVaultName: 'DevHomeKeyVault'
            #     SecretsFilter: 'ApiScanConnectionString'
            #     RunAsPreJob: false

            # - task: APIScan@2
            #   inputs:
            #     softwareFolder: '$(Build.StagingDirectory)'
            #     softwareName: 'Dev Home'
            #     softwareVersionNum: '1.0'
            #     softwareBuildNum: '$(Build.BuildId)'
            #     symbolsFolder: 'SRV*http://symweb'
            #   env:
            #     AzureServicesAuthConnectionString: $(ApiScanConnectionString)

            - task: CopyFiles@2
              displayName: Copy Unit Test DLLs
              inputs:
                Contents: 'test/bin/**/*'
                targetFolder: '$(Build.ArtifactStagingDirectory)\unittest'

            templateContext:
              outputs:
              - output: pipelineArtifact
                displayName: 'Publish Artifact: LocOutput'
                condition: and(eq(variables['EnableLocalization'], 'true'), eq(variables['UpdateLocalization'], 'true'))
                artifactName: LocOutput_${{ platform }}_${{ configuration }}
                targetPath: LocArchive
                sbomPackageName: WindowsAdvancedSettings.locoutput
                sbomPackageVersion: $(MSIXVersion)
              - output: pipelineArtifact
                displayName: Publish MSIX Artifact
                artifactName: msix_${{ platform }}_${{ configuration }}
                targetPath: $(appxPackageDir)\${{ configuration }}
                sbomPackageName: WindowsAdvancedSettings.msixpackage
                sbomPackageVersion: $(MSIXVersion)

    - stage: Build_MsixBundle
      dependsOn: [Build_WindowsAdvancedSettings, Build_StubPackages]
      condition: in(dependencies.Build_WindowsAdvancedSettings.result, 'Succeeded')
      jobs:
      - job: Build_MsixBundles
        steps:
        - ${{ each configuration in parameters.Configurations }}:
          - ${{ each platform in parameters.Platforms }}:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: msix_${{ platform }}_${{ configuration }}
                targetPath: $(appxPackageDir)\${{ configuration }}

          - task: PowerShell@2
            displayName: Create Stub Directory
            inputs:
              targetType: 'inline'
              script: New-Item -Path $(appxPackageDir)\${{ configuration }}\AppxMetadata\Stub -ItemType Directory

          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: MsixBundle_Stub
              targetPath: $(appxPackageDir)\Staging

          - task: PowerShell@2
            displayName: Unbundle Stub Packages
            inputs:
              filePath: 'build/scripts/UnbundleStubPackage.ps1'
              arguments: -InputPath $(appxPackageDir)\Staging -OutputLocation $(appxPackageDir)\${{ configuration }}\AppxMetadata\Stub

          - template: ./build/templates/EsrpSigning-Steps.yml@self
            parameters:
              displayName: Submit *.msix to ESRP for code signing
              inputs:
                FolderPath: '$(appxPackageDir)\${{ configuration }}\AppxMetadata'
                Pattern: '*.msix'
                UseMinimatch: true
                signConfigType: inlineSignParams
                inlineOperation: |
                  [
                    {
                      "keycode": "CP-230012",
                      "operationSetCode": "SigntoolvNextSign",
                      "parameters": [
                        {
                          "parameterName": "OpusName",
                          "parameterValue": "Microsoft"
                        },
                        {
                          "parameterName": "OpusInfo",
                          "parameterValue": "http://www.microsoft.com"
                        },
                        {
                          "parameterName": "PageHash",
                          "parameterValue": "/NPH"
                        },
                        {
                          "parameterName": "FileDigest",
                          "parameterValue": "/fd sha256"
                        },
                        {
                          "parameterName": "TimeStamp",
                          "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                        }
                      ],
                      "toolName": "signtool.exe",
                      "toolVersion": "6.2.9304.0"
                    }
                  ]

          - task: PowerShell@2
            displayName: Build MsixBundle
            inputs:
              filePath: './build/scripts/Build.ps1'
              arguments: -Configuration "${{ configuration }}" -Version $(MSIXVersion) -BuildStep "msixbundle" -IsAzurePipelineBuild

          - template: ./build/templates/EsrpSigning-Steps.yml@self
            parameters:
              displayName: Submit *.msixbundle to ESRP for code signing
              inputs:
                FolderPath: 'AppxBundles\${{ configuration }}'
                Pattern: '*.msixbundle'
                UseMinimatch: true
                signConfigType: inlineSignParams
                inlineOperation: |
                  [
                    {
                      "keycode": "CP-230012",
                      "operationSetCode": "SigntoolvNextSign",
                      "parameters": [
                        {
                          "parameterName": "OpusName",
                          "parameterValue": "Microsoft"
                        },
                        {
                          "parameterName": "OpusInfo",
                          "parameterValue": "http://www.microsoft.com"
                        },
                        {
                          "parameterName": "PageHash",
                          "parameterValue": "/NPH"
                        },
                        {
                          "parameterName": "FileDigest",
                          "parameterValue": "/fd sha256"
                        },
                        {
                          "parameterName": "TimeStamp",
                          "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                        }
                      ],
                      "toolName": "signtool.exe",
                      "toolVersion": "6.2.9304.0"
                    }
                  ]

        - task: MicrosoftTDBuild.tdbuild-task.tdbuild-task.TouchdownBuildTask@5
          displayName: Download and Use Localization Files
          condition: eq(variables['EnableLocalization'], 'true')
          retryCountOnTaskFailure: 2
          inputs:
            teamId: 71220
            FederatedIdentityTDBuildServiceConnection: $(TouchdownServiceConnection)
            authType: FederatedIdentityTDBuild
            resourceFilePath: |
              **\en-US\PDP.xml
            localizationTarget: false
            appendRelativeDir: true
            pseudoSetting: Included

        - task: PowerShell@2
          displayName: Move Loc files one level up
          condition: eq(variables['EnableLocalization'], 'true')
          inputs:
            targetType: inline
            script: >-
              $Files = Get-ChildItem . -R -Filter 'PDP.xml' | ? FullName -Like '*en-US\*\PDP.xml'

              $Files | % { Move-Item -Verbose $_.Directory $_.Directory.Parent.Parent -EA:Ignore }
            pwsh: true

        - task: MS-RDX-MRO.windows-store-publish-dev.package-task.store-package@3
          displayName: 'Create Release StoreBroker Package'
          condition: eq(variables['BuildingBranch'], 'release')
          inputs:
            serviceEndpoint: 'DevHome StoreBroker ServiceConnection'
            sbConfigPath: '$(System.DefaultWorkingDirectory)\build\store\SBConfig.json'
            sourceFolder: 'AppxBundles\Release'
            contents: '*.msixbundle'
            pdpPath: '$(System.DefaultWorkingDirectory)\build\store\PDPs'
            pdpMediaPath: '$(System.DefaultWorkingDirectory)\build\store\media'
            outSBName: WindowsAdvancedSettingsSubmissionPackage
            pdpInclude: 'PDP.xml'

        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: Publish MSIX Bundle Artifacts
            condition: ${{ containsValue(parameters.Configurations, 'release') }}
            artifactName: MsixBundle_Release
            targetPath: AppxBundles\Release
          - output: pipelineArtifact
            displayName: Publish MSIX Bundle Artifacts
            condition: ${{ containsValue(parameters.Configurations, 'debug') }}
            artifactName: MsixBundle_Debug
            targetPath: AppxBundles\Debug
          - output: pipelineArtifact
            displayName: 'Publish StoreBroker Artifacts'
            condition: eq(variables['BuildingBranch'], 'release')
            artifactName: StoreBrokerPackage
            targetPath: '$(System.DefaultWorkingDirectory)\SBOutDir'

    - stage: Store_Publish
      dependsOn: [Build_MsixBundle]
      condition: |
        and
        (
          in(dependencies.Build_MsixBundle.result, 'Succeeded'),
          eq(variables['EnableStorePublishing'], 'true')
        )
      jobs:
      - job: Store_Publish
        timeoutInMinutes: 0
        templateContext:
          type: releaseJob
          isProduction: true
          inputs:
          - input: pipelineArtifact
            artifactName: StoreBrokerPackage
            targetPath: SBOutDir
        steps:
          - task: MS-RDX-MRO.windows-store-publish-dev.publish-task.store-publish@3
            displayName: 'Publish Release StoreBroker Package'
            condition: eq(variables['BuildingBranch'], 'release')
            inputs:
              serviceEndpoint: 'DevHome StoreBroker ServiceConnection'
              appId: 9N8MHTPHNGVV
              inputMethod: JsonAndZip
              jsonPath: '$(System.DefaultWorkingDirectory)\SBOutDir\WindowsAdvancedSettingsSubmissionPackage.json'
              zipPath: '$(System.DefaultWorkingDirectory)\SBOutDir\WindowsAdvancedSettingsSubmissionPackage.zip'
              force: true
              deletePackages: true
              numberOfPackagesToKeep: 2
              jsonZipUpdateMetadata: true
              updateImages: true
